{"version":3,"sources":["app/home/PreviewComponent.js","app/home/PreviewContainer.js","app/home/ToolBarComponent.js","app/home/duck/types.js","app/home/duck/reducers.js","app/home/duck/actions.js","app/home/duck/operations.js","app/home/duck/index.js","app/home/ToolBarContainer.js","app/home/EditorComponent.js","app/home/EditorContainer.js","app/home/HomeComponent.js","app/home/HomeContainer.js","app/App.js","reducers.js","store.js","index.js"],"names":["PreviewComponent","props","id","dangerouslySetInnerHTML","__html","input","PreviewContainer","connect","ToolBarComponent","icon","faWindowMinimize","faWindowMaximize","className","idType","faMarkdown","text","onClick","handleMinimize","INITIAL_STATE","markedInput","marked","isMinimized","type","types","dispatch","getState","Creators","homeReducer","state","action","Object","assign","ToolBarContainer","home","homeOperations","EditorComponent","toolbarID","toolBarIcon","editorClass","value","onChange","handleChange","EditorContainer","event","target","HomeComponent","HomeContainer","App","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"qRAYeA,G,MATU,SAACC,GACtB,OACI,yBAAKC,GAAG,eACJ,yBAAKA,GAAG,UAAUC,wBAAyB,CAACC,OAAQH,EAAMI,YCDvDC,EAFUC,cAAUP,G,gCCepBQ,G,MAZU,SAACP,GACtB,IAAMQ,EAAqB,OAAdR,EAAMQ,KAAgBC,IAAmBC,IAEtD,OACI,yBAAKC,UAAU,UAAUV,GAAID,EAAMY,QAC/B,kBAAC,IAAD,CAAiBJ,KAAMK,IAAYZ,GAAG,kBACtC,uBAAGA,GAAG,gBAAgBD,EAAMc,MAC5B,kBAAC,IAAD,CAAiBN,KAAMA,EAAMP,GAAG,WAAWc,QAASf,EAAMgB,oBCVvD,EAHD,QAGC,EAFC,W,iBCEVZ,EAAK,qqBAuCLa,EAAgB,CAClBb,MAAOA,EACPc,YAHgBC,IAAOf,GAIvBgB,aAAa,GC5BF,EAfM,SAAChB,EAAOc,GACzB,MAAO,CACHG,KAAMC,EACNlB,MAAOA,EACPc,YAAaA,IAWN,EAPQ,SAACE,GACpB,MAAO,CACHC,KAAMC,EACNF,YAAaA,ICGN,EAbM,SAAChB,GAClB,OAAO,SAACmB,EAAUC,GACd,IAAMN,EAAcC,IAAOf,GAC3BmB,EAASE,EAAsBrB,EAAOc,MAU/B,EANQ,WACnB,OAAO,SAACK,EAAUC,GACdD,EAASE,EAAwBD,IAAWJ,gBCTrCM,EH6CK,WAAkC,IAAjCC,EAAgC,uDAA1BV,EAAeW,EAAW,uCACjD,OAAQA,EAAOP,MACX,KAAKC,EACD,OAAOO,OAAOC,OAAO,GAAIH,EAAO,CAC5BvB,MAAOwB,EAAOxB,MACdc,YAAaU,EAAOV,cAE5B,KAAKI,EACD,OAAOO,OAAOC,OAAO,GAAIH,EAAO,CAC5BP,aAAcO,EAAMP,cAE5B,QACI,OAAOO,IIzCJI,EADUzB,aAdD,SAACqB,GACrB,MAAO,CACHP,YAAaO,EAAMK,KAAKZ,gBAIL,SAACG,GACxB,MAAO,CACHP,eAAgB,WACZO,EAASU,SAKI3B,CAA6CC,GCOvD2B,EApBS,SAAClC,GACrB,IAAMmC,EAAYnC,EAAMoB,YAAc,oBAAsB,oBACtDgB,EAAepC,EAAMoB,YAAsB,MAAR,MACnCiB,EAAcrC,EAAMoB,YAAc,mBAAqB,mBAE7D,OACI,6BACI,yBAAKT,UAAW0B,GACZ,yBAAKpC,GAAG,cACJ,kBAAC,EAAD,CAASa,KAAK,SAASN,KAAM4B,EAAaxB,OAAQuB,EAC9CnB,eAAgBhB,EAAMgB,iBAC1B,8BAAUf,GAAG,SAASqC,MAAOtC,EAAMI,MAAOmC,SAAUvC,EAAMwC,gBAGlE,kBAAC,EAAD,CAAkBpC,MAAOJ,EAAMkB,iBCM5BuB,EAFSnC,aAnBA,SAAAqB,GACpB,MAAO,CACHvB,MAAOuB,EAAMK,KAAK5B,MAClBc,YAAaS,EAAMK,KAAKd,YACxBE,YAAaO,EAAMK,KAAKZ,gBAIL,SAAAG,GACvB,MAAO,CACHiB,aAAc,SAACE,GACXnB,EAASU,EAA4BS,EAAMC,OAAOL,SAEtDtB,eAAgB,WACZO,EAASU,SAKG3B,CAA6C4B,GCZtDU,EARO,WAClB,OACI,yBAAKjC,UAAU,mBACX,kBAAC,EAAD,QCDGkC,EAFOvC,cAAUsC,GCSjBE,EATH,WACV,OACE,6BACE,kBAAC,EAAD,Q,eCCSC,EAJKC,YAAgB,CAChChB,KAAMN,ICEKuB,EAFDC,YAAYH,EAAaI,YAAgBC,MCEvDC,IAASC,OACT,kBAAC,IAAD,CAAUL,MAAOA,GACb,kBAAC,EAAD,OAEFM,SAASC,eAAe,W","file":"static/js/main.68dd5852.chunk.js","sourcesContent":["import React from 'react';\r\nimport './preview.scss'\r\n\r\nconst PreviewComponent = (props) => {\r\n    return (\r\n        <div id=\"preview-box\">\r\n            <div id=\"preview\" dangerouslySetInnerHTML={{__html: props.input}} />\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default PreviewComponent;","import { connect } from 'react-redux';\r\nimport PreviewComponent from './PreviewComponent';\r\n\r\nconst PreviewContainer = connect()(PreviewComponent);\r\n\r\nexport default PreviewContainer;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMarkdown } from '@fortawesome/free-brands-svg-icons';\r\nimport { faWindowMinimize, faWindowMaximize } from '@fortawesome/free-solid-svg-icons';\r\nimport './toolbar.scss';\r\n\r\nconst ToolBarComponent = (props) => {\r\n    const icon = props.icon == 'min' ? faWindowMinimize : faWindowMaximize;\r\n\r\n    return (\r\n        <div className='toolbar' id={props.idType}>\r\n            <FontAwesomeIcon icon={faMarkdown} id=\"markdown-logo\" />\r\n            <p id=\"toolbar-text\">{props.text}</p>\r\n            <FontAwesomeIcon icon={icon} id=\"minimize\" onClick={props.handleMinimize} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ToolBarComponent;","const INPUT = 'INPUT';\r\nconst MINIMIZE= 'MINIMIZE';\r\n\r\nexport default {\r\n    INPUT,\r\n    MINIMIZE\r\n};","import types from './types.js';\r\nimport marked from 'marked';\r\n\r\nconst input = \r\n`# This is a header\r\n## This is a sub header \r\n[This is a link](https://localhost:3000)\r\n\r\nUse backticks to input in-line code \\`<div></div>\\`\r\n\r\n\\`\\`\\`\r\n// Multi-line code block\r\n    function() {\r\n    return 'Hello World';\r\n\\`\\`\\`\r\n\r\n - Lists can be created this way:\r\n    - item 1\r\n        - item 2\r\n\r\n> Blockquotes are also available\r\n\r\nPut **emphasis** on your texts by making them **bold**\r\n\r\nOr insert an _image_\r\n\r\n![react-logo](https://goo.gl/Umyytc)\r\n\r\n## Put your data into tables!\r\nColumn name | Column name |\r\n------------|-------------|\r\nPut your content in rows | and different columns |\r\nAnother row | last cell! |\r\n\r\nNumbered lists:\r\n1. number 1\r\n2. number 2\r\n\r\n---\r\n`;\r\n\r\nconst markedInput = marked(input);\r\nconst INITIAL_STATE = {\r\n    input: input,\r\n    markedInput: markedInput,\r\n    isMinimized: false\r\n};\r\n\r\nconst homeReducer = (state=INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case types.INPUT:\r\n            return Object.assign({}, state, {\r\n                input: action.input,\r\n                markedInput: action.markedInput\r\n            });\r\n        case types.MINIMIZE:\r\n            return Object.assign({}, state, {\r\n                isMinimized: !state.isMinimized\r\n            });\r\n        default:       \r\n            return state;\r\n    };\r\n};\r\n\r\nexport default homeReducer;","import types from './types.js';\r\n\r\nconst handleChange = (input, markedInput) => {\r\n    return {\r\n        type: types.INPUT,\r\n        input: input,\r\n        markedInput: markedInput\r\n    };\r\n}\r\n\r\nconst handleMinimize = (isMinimized) => {\r\n    return {\r\n        type: types.MINIMIZE,\r\n        isMinimized: isMinimized\r\n    };\r\n}\r\n\r\nexport default { \r\n    handleChange,\r\n    handleMinimize\r\n};","import Creators from './actions.js';\r\nimport marked from 'marked';\r\n\r\nconst handleChange = (input) => {\r\n    return (dispatch, getState) => {\r\n        const markedInput = marked(input);\r\n        dispatch(Creators.handleChange(input, markedInput));\r\n    };\r\n}\r\n\r\nconst handleMinimize = () => {\r\n    return (dispatch, getState) => {\r\n        dispatch(Creators.handleMinimize(getState().isMinimized));\r\n    }\r\n}\r\n\r\nexport default {\r\n    handleChange,\r\n    handleMinimize\r\n};","import homeReducer from './reducers';\r\nexport { default as homeOperations} from './operations';\r\nexport { default as homeTypes } from './types';\r\nexport default homeReducer; ","import { connect } from 'react-redux';\r\nimport ToolBarComponent from './ToolBarComponent';\r\nimport { homeOperations } from './duck';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isMinimized: state.home.isMinimized\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleMinimize: () => {\r\n            dispatch(homeOperations.handleMinimize());\r\n        }\r\n    }\r\n}\r\n\r\nconst ToolBarContainer = connect(mapStateToProps, mapDispatchToProps)(ToolBarComponent);\r\nexport default ToolBarContainer;","import React from 'react';\r\nimport PreviewContainer from './PreviewContainer';\r\nimport './editor.scss';\r\nimport ToolBar from './ToolBarContainer';\r\n\r\nconst EditorComponent = (props) => {\r\n    const toolbarID = props.isMinimized ? 'toolbar-minimized' : 'toolbar-maximized';\r\n    const toolBarIcon = !props.isMinimized ? 'min' : 'max';\r\n    const editorClass = props.isMinimized ? 'editor-minimized' : 'editor-maximized';\r\n\r\n    return (\r\n        <div>\r\n            <div className={editorClass}>\r\n                <div id=\"editor-box\">\r\n                    <ToolBar text=\"Editor\" icon={toolBarIcon} idType={toolbarID} \r\n                        handleMinimize={props.handleMinimize} />\r\n                    <textarea id=\"editor\" value={props.input} onChange={props.handleChange} />\r\n                </div>\r\n            \r\n            <PreviewContainer input={props.markedInput} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditorComponent;","import { connect } from 'react-redux';\r\nimport EditorComponent from './EditorComponent';\r\nimport { homeOperations } from './duck';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        input: state.home.input,\r\n        markedInput: state.home.markedInput,\r\n        isMinimized: state.home.isMinimized\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleChange: (event) => {\r\n            dispatch(homeOperations.handleChange(event.target.value));\r\n        },\r\n        handleMinimize: () => {\r\n            dispatch(homeOperations.handleMinimize());\r\n        }\r\n    }\r\n};\r\n\r\nconst EditorContainer = connect(mapStateToProps, mapDispatchToProps)(EditorComponent);\r\n\r\nexport default EditorContainer;","import React from 'react';\r\nimport EditorContainer from './EditorContainer';\r\n\r\nconst HomeComponent = () => {\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <EditorContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeComponent;","import { connect } from 'react-redux';\r\nimport HomeComponent from './HomeComponent';\r\n\r\nconst HomeContainer = connect()(HomeComponent);\r\n\r\nexport default HomeContainer;","import React from 'react';\r\nimport { Home } from './home';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Home />\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport homeReducer from './app/home/duck';\r\n\r\nconst rootReducer = combineReducers({\r\n    home: homeReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>\n, document.getElementById('root'));\n\n"],"sourceRoot":""}